/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'harishb' at '1/15/16 10:54 PM' with Gradle 2.5
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.5/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenCentral()

        maven {
            url 'http://10.0.0.5:8081/artifactory/plugins-release'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE")
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
        classpath 'com.bmuschko:gradle-docker-plugin:2.6.5'
        classpath 'se.transmode.gradle:gradle-docker:1.1'
    }
}

repositories {
    mavenCentral()
    //maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
    apply plugin: "com.jfrog.artifactory"
    apply plugin: 'maven-publish'
    apply plugin: 'application'
    apply plugin: 'docker'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


    group = 'com.hb.base'
    version = '1.0.0'


    jar {
    baseName = 'common-jsp'
        version = project.version
}

}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'commons-dbcp:commons-dbcp:1.4'
    compile 'org.hibernate:hibernate-core:4.3.11.Final'
    compile 'com.googlecode.genericdao:dao-hibernate:1.2.0'
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework:spring-orm'
    compile 'org.springframework.boot:spring-boot-starter-jdbc'
    compile "org.springframework.boot:spring-boot-starter-amqp"
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    runtime 'mysql:mysql-connector-java'
    testCompile 'junit:junit:4.12'
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'libs-release-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }

        defaults {
            publications('mavenJava')
        }
    }
    resolve {
        repository {
            repoKey = 'libs-release'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}


idea {
    module {
        // if you hate browsing Javadoc
        downloadJavadoc = false

        // and love reading sources :)
        downloadSources = true
    }
}


group = 'aglover'
sourceCompatibility = 1.8
mainClassName = 'com.hb.app.main.MainClass'
